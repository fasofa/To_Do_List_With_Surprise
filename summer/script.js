document.addEventListener('DOMContentLoaded', () => { // ‡∏£‡∏≠‡πÉ‡∏´‡πâ DOM ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
    const taskInput = document.getElementById('todo-input'); // ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å task
    const addTaskBtn = document.getElementById('add-task-btn'); // ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏° task
    const todoList = document.getElementById('task-list'); // ul ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ task
    const todosContainer = document.getElementById('todos-container'); // container ‡∏Ç‡∏≠‡∏á task ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const progressBar = document.getElementById('progress'); // progress bar
    const progressNumber = document.getElementById('numbers'); // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô task

    const toggleEmptyState = () => { // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î container ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ/‡πÑ‡∏°‡πà‡∏°‡∏µ task
        todosContainer.style.width = todoList.children.length > 0 ? '100%' : '50%'; // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ task ‡πÉ‡∏´‡πâ‡∏Å‡∏ß‡πâ‡∏≤‡∏á 100% ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ 50%
    };

    const updateProgress = (checkCompleation = true) => { // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï progress bar ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
        const totalTasks = todoList.children.length; // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô task ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        const completedTasks = todoList.querySelectorAll('.checkbox:checked').length; // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô task ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÄ‡∏™‡∏£‡πá‡∏à

        progressBar.style.width = totalTasks ? `${(completedTasks / totalTasks) * 100}%` : '0%'; // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á progress bar
        progressNumber.textContent = `${completedTasks} / ${totalTasks}`; // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç

        if(checkCompleation && totalTasks > 0 && completedTasks === totalTasks) { // ‡∏ñ‡πâ‡∏≤‡∏ó‡∏≥‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å task
            Confetti2(); // ‡πÅ‡∏™‡∏î‡∏á confetti ‡πÅ‡∏ö‡∏ö‡∏´‡∏±‡∏ß‡πÉ‡∏à
            Confetti(); // ‡πÅ‡∏™‡∏î‡∏á confetti ‡πÅ‡∏ö‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥
            showHBD(); // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° HBD
        }
    };

    const addTask = (text, completed = false, checkCompleation = true) => { // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏° task ‡πÉ‡∏´‡∏°‡πà
        const taskText = text || taskInput.value.trim(); // ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å argument ‡∏´‡∏£‡∏∑‡∏≠ input
        if (!taskText) { // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
            updateProgress(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï progress bar
            return; // ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
        }

        const newTask = document.createElement('li'); // ‡∏™‡∏£‡πâ‡∏≤‡∏á element <li> ‡πÉ‡∏´‡∏°‡πà
        newTask.innerHTML = ` 
            <input type="checkbox" class="checkbox"${completed ? ' checked' : ''}> 
            <span>${taskText}</span> 
            <div class="task-buttons"> 
                <button class="edit-btn"><i class="fa-solid fa-pen"></i></button>
                <button class="delete-btn"><i class="fa-solid fa-trash"></i></button>
            </div>
        `;

        const checkbox = newTask.querySelector('.checkbox'); // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å checkbox ‡∏Ç‡∏≠‡∏á task ‡∏ô‡∏µ‡πâ
        const editBtn = newTask.querySelector('.edit-btn'); // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏∏‡πà‡∏° edit ‡∏Ç‡∏≠‡∏á task ‡∏ô‡∏µ‡πâ

        if(completed){ // ‡∏ñ‡πâ‡∏≤ task ‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏ó‡∏≥‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
            newTask.classList.add('completed'); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏•‡∏≤‡∏™ completed
            editBtn.disabled = true; // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏° edit
            editBtn.style.opacity = '0.5'; // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏≤‡∏á‡∏•‡∏á
            editBtn.style.pointerEvents = 'none'; // ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ
            updateProgress(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï progress bar
        }

        checkbox.addEventListener('change', () => { // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ checkbox
            const isChecked = checkbox.checked; // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ checked ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            newTask.classList.toggle('completed', isChecked); // ‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏ö‡∏Ñ‡∏•‡∏≤‡∏™ completed
            editBtn.disabled = isChecked; // ‡∏õ‡∏¥‡∏î/‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏° edit ‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
            editBtn.style.opacity = isChecked ? '0.5' : '1'; // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏° edit
            editBtn.style.pointerEvents = isChecked ? 'none' : 'auto'; // ‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            updateProgress(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï progress bar
        });

        editBtn.addEventListener('click', () => { // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° edit
            if(!checkbox.checked) { // ‡∏ñ‡πâ‡∏≤ task ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ó‡∏≥‡πÄ‡∏™‡∏£‡πá‡∏à
                taskInput.value = newTask.querySelector('span').textContent; // ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° task ‡∏•‡∏á input
                newTask.remove(); // ‡∏•‡∏ö task ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å list
                toggleEmptyState(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ñ‡πâ‡∏≤ list ‡∏ß‡πà‡∏≤‡∏á
                updateProgress(false); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï progress bar ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÄ‡∏ä‡πá‡∏Ñ completion effect
            }
        });

        newTask.querySelector('.delete-btn').addEventListener('click', () => { // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö
            newTask.remove(); // ‡∏•‡∏ö task ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å list
            toggleEmptyState(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ñ‡πâ‡∏≤ list ‡∏ß‡πà‡∏≤‡∏á
            updateProgress(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï progress bar
        });

        todoList.appendChild(newTask); // ‡πÄ‡∏û‡∏¥‡πà‡∏° task ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤ ul
        taskInput.value = ''; // ‡∏•‡πâ‡∏≤‡∏á input
        toggleEmptyState(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ñ‡πâ‡∏≤ list ‡∏ß‡πà‡∏≤‡∏á
        updateProgress(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï progress bar
    };

    addTaskBtn.addEventListener('click', () => addTask()); // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏° task
    taskInput.addEventListener('keypress', (e) => { // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ô input
        if (e.key === 'Enter') { // ‡∏ñ‡πâ‡∏≤‡∏Å‡∏î Enter
            e.preventDefault(); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£ submit form
            addTask(); // ‡πÄ‡∏û‡∏¥‡πà‡∏° task
        }
    });
});

const Confetti = () => { // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á confetti ‡πÅ‡∏ö‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥
    const duration = 15 * 1000, // ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ 15 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        animationEnd = Date.now() + duration, // ‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î
        defaults = { startVelocity: 30, spread: 360, ticks: 60, zIndex: 0 }; // ‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏ï‡πâ‡∏ô

    function randomInRange(min, max) { 
        return Math.random() * (max - min) + min;
    }

    const interval = setInterval(function() { 
        const timeLeft = animationEnd - Date.now(); 

        if (timeLeft <= 0) {
            return clearInterval(interval); 
        }

        const particleCount = 50 * (timeLeft / duration); 

        
        confetti(
            Object.assign({}, defaults, {
                particleCount,
                origin: { x: randomInRange(0.1, 0.3), y: Math.random() - 0.2 },
            })
        );
        confetti(
            Object.assign({}, defaults, {
                particleCount,
                origin: { x: randomInRange(0.7, 0.9), y: Math.random() - 0.2 },
            })
        );
    }, 250);
};

const Confetti2 = () => { 
    const defaults = {
        spread: 360,
        ticks: 100,
        gravity: 0,
        decay: 0.94,
        startVelocity: 30,
        shapes: ["heart"],
        colors: ["FFC0CB", "FF69B4", "FF1493", "C71585"],
    };

    confetti({
        ...defaults,
        particleCount: 50,
        scalar: 2,
    });

    confetti({
        ...defaults,
        particleCount: 25,
        scalar: 3,
    });

    confetti({
        ...defaults,
        particleCount: 10,
        scalar: 4,
    });
};

function showHBD() { // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° HBD ‡∏Å‡∏•‡∏≤‡∏á‡∏à‡∏≠
    const hbdDiv = document.createElement('div'); // ‡∏™‡∏£‡πâ‡∏≤‡∏á div ‡πÉ‡∏´‡∏°‡πà
    hbdDiv.id = 'hbd-message'; // ‡∏ï‡∏±‡πâ‡∏á id
    hbdDiv.innerText = 'üéâHappy Birthdayüéâ'; // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á
    document.body.appendChild(hbdDiv); // ‡πÄ‡∏û‡∏¥‡πà‡∏° div ‡πÄ‡∏Ç‡πâ‡∏≤ body

    setTimeout(() => { // ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡∏•‡∏ö div ‡∏≠‡∏≠‡∏Å
        hbdDiv.remove();
    }, 26000); // ‡∏•‡∏ö‡∏´‡∏•‡∏±‡∏á 26 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
}